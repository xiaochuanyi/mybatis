<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace：命名空间，用于隔离sql，还有一个很重要的作用，后面会讲 -->
<!-- parametertype指的是传入的参数 -->
<mapper namespace="mapper.mapperdao">
<!-- 查询 -->
	<select id="findbyuserid" parameterType="int" resultType="bean.user">	
		select * from user where id = #{v}
	</select>
	<select id="findbyuser" parameterType="String" resultType="bean.user">
		select * from user where name like "%"#{hehe}"%"
	</select>	
	<!-- 添加用户 -->
	<insert id="insert" parameterType="bean.user">
		<selectKey keyProperty="id" resultType="int" order="AFTER" > 
			select LAST_INSERT_ID()
		</selectKey>
		insert into user(name,money) value (#{name},#{money});
	</insert>
	<!-- 修改 -->
	<update id="updateuser" parameterType="bean.user">
		update user set name=#{name},money=#{money} where id = #{id}
	</update>
	<!-- 删除 -->
	<delete id="deletebyid" parameterType="int">
		delete from user where id = #{v}
	</delete>
	<select id="findbyQueryVo" parameterType="bean.QueryVo" resultType="bean.user">
		select * from user where name like "%"#{u.name}"%"
	</select>
	<resultMap type="bean.user" id="users">
		<id column="id" property="id"/>
		<!-- column指的是数据库中的列名，而property指的是bean中对应的字段名 -->
		<result column="dataname" property="beanname"/>
	</resultMap>
	<select id="findbyuser1" parameterType="String" resultMap="users">
		select * from user where name like "%"#{hehe}"%"
	</select>
	<select id="findbynameandmoney" parameterType="bean.user" resultType="bean.user">
		select * from user
		<where>
		<if test="money != null and money !=''">
			money = #{money}
		</if>
		<if test="name != null and name != ''">
			and name = #{name}
		</if>
		</where>
	</select>
	<select id="findbyids" parameterType="bean.QueryVo" resultType="bean.user">
		select * from user
		<where>
		<foreach collection="list" item = "id" separator="," open="id in (" close=")">
			#{id}
		</foreach>
		</where>
	</select>
</mapper>
